version: "3.8"

services:
  # Networking
  gateway:
    container_name: openmrs-gateway
    image: openmrs/openmrs-reference-application-3-gateway:${TAG:-nightly}
    depends_on:
      - frontend
      - backend
    expose:
     - 80
    networks:
      - web
      - openmrs3
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.bahmni_chk.entrypoints=websecure
      - traefik.http.routers.bahmni_chk.rule=Host(`o3.emr.ocb.msf.org`)
      - traefik.http.routers.bahmni_chk.tls.certresolver=letsencrypt_dns
      - traefik.http.middlewares.bahmni_chk-pathregex.replacepathregex.regex=^/openmrs/spa/(.*)
      - traefik.http.middlewares.bahmni_chk-pathregex.replacepathregex.replacement=/openmrs/spa/$$1
      - traefik.docker.network=web
    volumes:
      - "./gateway/nginx.conf:/etc/nginx/nginx.conf"
      - "./gateway/default.conf.template:/etc/nginx/templates/default.conf.template"

  # OpenMRS 3 Frontend
  frontend:
    container_name: openmrs-frontend
    image: msfocg/openmrs3-frontend:${HOSTNAME_TAG:-dev}
    environment:
      SPA_PATH: /openmrs/spa
      API_URL: /openmrs
      SPA_CONFIG_URLS: /openmrs/spa/custom-config.json
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      timeout: 5s
    depends_on:
      - backend
    networks:
      openmrs3:
        aliases:
          - frontend

  # OpenMRS Core Backend
  backend:
    container_name: openmrs-backend
    image: msfocg/openmrs3-backend:${HOSTNAME_TAG:-dev}
    depends_on:
      - db
    environment:
      OMRS_CONFIG_MODULE_WEB_ADMIN: "true"
      OMRS_CONFIG_AUTO_UPDATE_DATABASE: "true"
      OMRS_CONFIG_CREATE_TABLES: "true"
      OMRS_CONFIG_CONNECTION_SERVER: db
      OMRS_CONFIG_CONNECTION_DATABASE: openmrs
      OMRS_CONFIG_CONNECTION_USERNAME: ${OPENMRS_DB_USER:-openmrs}
      OMRS_CONFIG_CONNECTION_PASSWORD: ${OPENMRS_DB_PASSWORD:-openmrs}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/openmrs"]
      timeout: 5s
    networks:
      openmrs3:
        aliases:
          - backend
    volumes:
      - openmrs-data:/openmrs
      - tomcat-data:/usr/local/tomcat
      - ./distro/configuration:/openmrs/distribution/openmrs_config
      - ./distro/openmrs_modules/event-2.10.0.omod:/openmrs/distribution/openmrs_modules/event-2.10.0.omod
      - ./distro/openmrs_modules/labonfhir-1.3.1-SNAPSHOT.omod:/openmrs/distribution/openmrs_modules/labonfhir-1.3.1-SNAPSHOT.omod

  # MariaDB
  db:
    container_name: openmrs-db
    image: mariadb:10.8.2
    command: "mysqld --character-set-server=utf8 --collation-server=utf8_general_ci"
    healthcheck:
      test: "mysql --user=${OMRS_DB_USER:-openmrs} --password=${OMRS_DB_PASSWORD:-openmrs} --execute \"SHOW DATABASES;\""
      interval: 3s
      timeout: 1s
      retries: 5
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
        order: stop-first
    environment:
      MYSQL_DATABASE: openmrs
      MYSQL_USER: ${OMRS_DB_USER:-openmrs}
      MYSQL_PASSWORD: ${OMRS_DB_PASSWORD:-openmrs}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-openmrs}
    ports:
      - 3307:3306
    networks:
      openmrs3:
        aliases:
          - db
    volumes:
      - db-data:/var/lib/mysql
      - ./FHIR/mysql.cnf:/etc/mysql/conf.d/custom.cnf  # mysql config preconfigured to allow binlog/debezium

volumes:
  openmrs-data: ~
  tomcat-data: ~
  db-data: ~
networks:
  openmrs3:
    name: o3
  web:
    external: true
